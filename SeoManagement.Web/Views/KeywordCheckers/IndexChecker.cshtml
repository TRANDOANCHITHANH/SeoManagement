@model SeoManagement.Web.Models.ViewModels.KeywordRankViewModel

@{
    ViewData["Title"] = "Kiểm tra thứ hạng từ khóa";
    var projectId = ViewBag.ProjectId as int?;
    var isAutoReportEnabled = ViewBag.IsAutoReportEnabled as bool? ?? false;
}
<div class="container">
    <div class="page-header mb-3">
        <h4 class="fw-bold">Keywords</h4>
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a asp-action="Index" asp-controller="Home">
                    <i class="icon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="icon-arrow-right"></i>
            </li>
            <li class="nav-item">
                <a asp-action="Index" asp-controller="SEOProjects" asp-route-projectType="KeywordRankChecker">Kiểm tra thứ hạng</a>
            </li>
            <li class="separator">
                <i class="icon-arrow-right"></i>
            </li>
            <li class="nav-item">
                <a href="#">Chi tiết</a>
            </li>
        </ul>
    </div>

    <h2 class="text-center mb-4">Kiểm tra thứ hạng từ khóa</h2>
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger text-center">@TempData["Error"]</div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success text-center">@TempData["Success"]</div>
    }

    @if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="alert alert-@(Model.Message.Contains("Lỗi") ? "danger" : "success") text-center">@Model.Message</div>
    }

    @if (ViewBag.ProjectId != null)
    {
        <div class="card shadow-sm mb-4">
            <div class="card-body">
                <div class="row g-3 align-items-center">
                    <div class="col-12 col-md-4">
                        <p class="card-title mb-0">Dự án: @ViewBag.ProjectName</p>
                    </div>
                    <div class="col-12 col-md-4">
                        <p class="card-text mb-0"><strong>Mô tả:</strong> @ViewBag.ProjectDescription</p>
                    </div>
                    <div class="col-12 col-md-4">
                        <p class="card-text mb-0"><strong>Search Engine:</strong> Google</p>
                    </div>
                    <div class="col-12 col-md-4 d-flex justify-content">
                        <div class="d-flex align-items-center">
                            <p class="form-check-label me-3" for="autoReportToggle">Tự động kiểm tra:</p>
                            <div class="form-check form-switch" style="padding-left:40px">
                                <input class="form-check-input" type="checkbox" id="autoReportToggle" @(isAutoReportEnabled ? "checked" : "")
                                       onchange="toggleAutoReport(@projectId, this.checked)">
                                <label class="form-check-label badge @(isAutoReportEnabled ? "bg-success" : "bg-secondary") ms-2" for="autoReportToggle" style="border-radius:40px">
                                    @(isAutoReportEnabled ? "Bật" : "Tắt")
                                </label>
                            </div>
                        </div>
                    </div>
                 
                    <div class="col-12 col-md-4">
                        <p class="card-text mb-0"><strong>Vị trí:</strong> Việt Nam</p>
                    </div>
                    <div class="col-12 col-md-4">
                        <p class="card-text mb-0"><strong>Thiết bị:</strong> Desktop</p>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="overlay" id="loadingOverlay">
        <div class="spinner-container">
            <div class="spinner"></div>
            <span>Đang kiểm tra...</span>
        </div>
    </div>

    <form asp-action="IndexChecker" method="post" class="mb-4" id="checkForm">
        <input type="hidden" name="ProjectId" value="@ViewBag.ProjectId" />
        <div class="input-group">
            <input type="text" name="Keyword" class="form-control" placeholder="Nhập từ khóa (ví dụ: máy dò kim loại)" value="@Model.Keyword" />
            <input type="text" name="Domain" class="form-control" placeholder="Nhập domain (ví dụ: vanlangvn.com)" value="@Model.Domain" style="margin-left: 5px;" />
            <button type="submit" class="btn btn-primary" style="margin-left: 5px;">Kiểm tra</button>
        </div>
    </form>
    <div class="card shadow p-4 mb-4">
        <h4 class="mb-3">Biểu đồ tăng trưởng từ khóa</h4>
        <div class="chart-container">
            <canvas id="keywordGrowthChart"></canvas>
        </div>
    </div>
    @if (ViewBag.Results != null && ViewBag.Results.Count > 0)
    {
        <div class="card shadow p-4 mb-4">
            <h4 class="mb-3">Danh sách từ khóa</h4>
            <a asp-action="ExportToExcel" asp-route-projectId="@ViewBag.ProjectId" class="btn btn-info btn-sm mb-2" style="width:15%;">
                <i class="fa fa-download"></i> Xuất Excel
            </a>
            <div class="table-responsive">
            <table class="table table-bordered" id="urlTable">
                <thead>
                    <tr>
                        <th>Từ khóa</th>
                        <th>Domain</th>
                        <th>Vị trí hiện tại</th>
                        <th>Vị trí cũ</th>
                        <th>Vị trí tốt nhất</th>
                        <th>Top Volume</th>
                        <th>Cập nhật lần cuối</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var result in ViewBag.Results)
                    {
                      
                        <tr>
                            <td>@result.Keyword</td>
                            <td>@result.Domain</td>
                            <td>@(result.CurrentPosition > 0 ? result.CurrentPosition.ToString() : "N/A")</td>
                            <td>@(result.PreviousPosition > 0 ? result.PreviousPosition.ToString() : "N/A")</td>
                            <td>@(result.BestPosition > 0 ? result.BestPosition.ToString() : "N/A")</td>
                            <td>@(result.TopVolume > 0 ? result.TopVolume : "N/A")</td>
                            <td>@result.LastUpdate</td>
                            <td>
                                <a href="https://www.google.com/search?q=@result.Keyword&num=100&gl=vn&hl=vi" class="btn btn-outline-primary btn-sm" target="_blank"><i class="fa fa-share-square-o"></i></a>
                                <button class="btn btn-outline-info btn-sm" onclick="showDetails('@(result.Keyword.Replace(" ", "_") + "_" + result.Domain.Replace(".", "_"))')"><i class="fa fa-info"></i></button>
                                <form asp-action="DeleteRank" method="post" style="display:inline;">
                                    <input type="hidden" name="projectId" value="@ViewBag.ProjectId" />
                                    <input type="hidden" name="keyword" value="@result.Keyword" />
                                    <input type="hidden" name="domain" value="@result.Domain" />
                                    <button type="submit" class="btn btn-outline-danger btn-sm" onclick="return confirm('Bạn có chắc muốn xóa kết quả này?')"> <i class="fa fa-trash-o"></i></button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            </div>
        </div>

        <!-- Modal chi tiết -->
        @foreach (var result in ViewBag.Results)
        {
            <div class="modal fade" id="detailsModal_@(result.Keyword.Replace(" ", "_") + "_" + result.Domain.Replace(".", "_"))" tabindex="-1" role="dialog">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Chi tiết - @result.Keyword trên @result.Domain</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                        </div>
                        <div class="modal-body">
                            <h5>Thông tin chính</h5>
                            <p><strong>Vị trí hiện tại:</strong> @(result.CurrentPosition > 0 ? result.CurrentPosition.ToString() : "N/A")</p>
                            <p><strong>Vị trí cũ:</strong> @(result.PreviousPosition > 0 ? result.PreviousPosition.ToString() : "N/A")</p>
                            <p><strong>Vị trí tốt nhất:</strong> @(result.BestPosition > 0 ? result.BestPosition.ToString() : "N/A")</p>
                            <p><strong>Top Volume:</strong> @(result.TopVolume > 0 ? result.TopVolume : "N/A")</p>

                            <h5>Kết quả SERP</h5>
                            @if (!string.IsNullOrEmpty(result.SerpResultsJson))
                            {
                                var serpResults = System.Text.Json.JsonSerializer.Deserialize<List<System.Text.Json.JsonElement>>(result.SerpResultsJson);
                                <div class="table-responsive">
                                    <table class="table table-bordered" id="urlTable">
                                    <thead>
                                        <tr>
                                            <th>Vị trí</th>
                                            <th>Tiêu đề</th>
                                            <th>URL</th>
                                            <th>Rank</th>
                                            <th>Traffic</th>
                                            <th>Domain Rating</th>
                                            <th>Top Volume</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var serp in serpResults)
                                        {
                                            System.Text.Json.JsonElement positionProp = default;
                                            System.Text.Json.JsonElement titleProp = default;
                                            System.Text.Json.JsonElement urlProp = default;
                                            System.Text.Json.JsonElement metricsProp = default;
                                            System.Text.Json.JsonElement rankProp = default;
                                            System.Text.Json.JsonElement trafficProp = default;
                                            System.Text.Json.JsonElement drProp = default;
                                            System.Text.Json.JsonElement tvProp = default;

                                            bool hasPosition = serp.TryGetProperty("Position", out positionProp) && positionProp.ValueKind == System.Text.Json.JsonValueKind.Number;
                                            bool hasTitle = serp.TryGetProperty("Title", out titleProp) && titleProp.ValueKind == System.Text.Json.JsonValueKind.String;
                                            bool hasUrl = serp.TryGetProperty("Url", out urlProp) && urlProp.ValueKind == System.Text.Json.JsonValueKind.String;
                                            bool hasMetrics = serp.TryGetProperty("Metrics", out metricsProp) && metricsProp.ValueKind == System.Text.Json.JsonValueKind.Object;
                                            bool hasRank = hasMetrics && metricsProp.TryGetProperty("Rank", out rankProp) && rankProp.ValueKind == System.Text.Json.JsonValueKind.Number;
                                            bool hasTraffic = hasMetrics && metricsProp.TryGetProperty("Traffic", out trafficProp) && trafficProp.ValueKind == System.Text.Json.JsonValueKind.Number;
                                            bool hasDomainRating = hasMetrics && metricsProp.TryGetProperty("DomainRating", out drProp) && drProp.ValueKind == System.Text.Json.JsonValueKind.Number;
                                            bool hasTopVolume = hasMetrics && metricsProp.TryGetProperty("TopVolume", out tvProp) && tvProp.ValueKind == System.Text.Json.JsonValueKind.Number;

                                            <tr>
                                                <td>@(hasPosition ? positionProp.GetInt32() : "N/A")</td>
                                                <td>@(hasTitle ? titleProp.GetString() : "N/A")</td>
                                                <td>@(hasUrl ? urlProp.GetString() : "N/A")</td>
                                                <td>@(hasRank ? rankProp.GetInt64() : "N/A")</td>
                                                <td>@(hasTraffic ? trafficProp.GetInt32() : "N/A")</td>
                                                <td>@(hasDomainRating ? drProp.GetInt32() : "N/A")</td>
                                                <td>@(hasTopVolume ? tvProp.GetInt32() : "N/A")</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                </div>
                            }

                            <h5>Cập nhật lần cuối</h5>
                            <p>@result.LastUpdate</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
</div>
@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    function showDetails(id) {
        $('#detailsModal_' + id).modal('show');
    }
        document.getElementById('checkForm').addEventListener('submit', function () {
        document.getElementById('loadingOverlay').style.display = 'flex';
    });
         function toggleAutoReport(projectId, isEnabled) {
                fetch('/KeywordCheckers/AutoReport', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                    body: `projectId=${projectId}&isEnabled=${isEnabled}`
                })
                .then(response => response.ok ? response.text() : Promise.reject('Error'))
                .then(() => {
                   
                    location.reload();
                })
                .catch(error => alert('Có lỗi xảy ra: ' + error));
            }
        function drawKeywordGrowthChart() {
            const results = @Html.Raw(Json.Serialize(ViewBag.Results));
            const ctx = document.getElementById('keywordGrowthChart').getContext('2d');
            const datasets = results.map(result => {
                const labels = result.KeywordHistories ? result.KeywordHistories.map(h => new Date(h.RecordedDate).toLocaleDateString()) : [];
                const data = result.KeywordHistories ? result.KeywordHistories.map(h => h.Rank) : [];

                return {
                    label: `${result.Keyword} (${result.Domain})`,
                    data: data,
                    borderColor: `hsl(${Math.random() * 360}, 70%, 50%)`,
                    fill: false,
                    tension: 0.1
                };
            });

            const chartData = {
                labels: datasets.length > 0 ? datasets[0].data.map((_, i) => i + 1) : [],
                datasets: datasets
            };

            new Chart(ctx, {
                type: 'line',
                data: chartData,
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            reverse: true, 
                            title: {
                                display: true,
                                text: 'Vị trí'
                            }
                        },
                        x: {
                            title: {
                                display: true,
                                text: 'Thời gian (theo thứ tự cập nhật)'
                            }
                        }
                    },
                    plugins: {
                        legend: {
                            position: 'top'
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.dataset.label || '';
                                    const value = context.raw || 0;
                                    return `${label}: Vị trí ${value} vào ngày ${labels[context.dataIndex]}`;
                                }
                            }
                        }
                    }
                }
            });
        }

             document.addEventListener('DOMContentLoaded', drawKeywordGrowthChart);
</script>
}