@model SeoManagement.Web.Models.ViewModels.PagedResultViewModel<SeoManagement.Web.Areas.Admin.Models.ViewModels.SystemConfigViewModel>

@{
    ViewData["Title"] = "Danh sách cấu hình";
}

<!-- Alerts -->
@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Config Table -->
<div class="row">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                <div class="d-flex align-items-center">
                    <h4 class="card-title">Danh sách cấu hình hệ thống</h4>
                    <a class="btn btn-primary btn-round ms-auto" asp-action="Create">
                        <i class="fa fa-plus"></i>
                        Thêm cấu hình
                    </a>
                </div>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table id="basic-datatables" class="table table-striped table-hover">
                        <thead class="table-light">
                            <tr>
                                <th>Khóa cấu hình</th>
                                <th>Giá trị</th>
                                <th>Ngày sửa cuối</th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Items)
                            {
                                <tr>
                                    <td>@item.ConfigKey</td>
                                    <td>@item.ConfigValue</td>
                                    <td>@item.LastModified.ToString("dd/MM/yyyy HH:mm:ss")</td>
                                    <td>
                                        <a asp-action="Edit" asp-route-configId="@item.ConfigID" class="btn btn-link btn-primary">
                                            <i class="fa fa-edit"></i>
                                        </a>|
                                        <button type="button" class="btn btn-danger btn-link delete-btn" data-config-id="@item.ConfigID" data-key="@item.ConfigKey">
                                            <i class="fa fa-times"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Xác nhận xóa</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Bạn có chắc chắn muốn xóa cấu hình "<strong><span id="modal-key"></span></strong>" không?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <form asp-action="DeleteConfirmed" asp-controller="SystemConfigs" asp-area="Admin" method="post" id="deleteForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="configId" id="deleteConfigId" />
                    <button type="submit" class="btn btn-danger">Xóa</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $('#basic-datatables').DataTable();

          // Add Row
          $("#add-row").DataTable({
            pageLength: 5,
          });

          var action =
            '<td> <div class="form-button-action"> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-primary btn-lg" data-original-title="Edit Task"> <i class="fa fa-edit"></i> </button> <button type="button" data-bs-toggle="tooltip" title="" class="btn btn-link btn-danger" data-original-title="Remove"> <i class="fa fa-times"></i> </button> </div> </td>';

          $("#addRowButton").click(function () {
            $("#add-row")
              .dataTable()
              .fnAddData([
                $("#addName").val(),
                $("#addPosition").val(),
                $("#addOffice").val(),
                action,
              ]);
            $("#addRowModal").modal("hide");
          });

            $('.delete-btn').on('click', function () {
                var configId = $(this).data('config-id');
                var key = $(this).data('key');
                $('#modal-key').text(key);
                $('#deleteConfigId').val(configId);
                var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
                deleteModal.show();
            });

            $('#deleteForm').on('submit', function (event) {
                event.preventDefault();
                var form = this;
                fetch('/Admin/SystemConfigs/DeleteConfirmed', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    },
                    body: new URLSearchParams(new FormData(form)).toString()
                })
                .then(response => {
                    if (response.ok) {
                        location.reload();
                    } else {
                        return response.text().then(text => { throw new Error(text); });
                    }
                })
                .catch(error => {
                    alert('Lỗi: ' + error.message);
                    console.error('Error:', error);
                });
            });
        });
    </script>
}